buildscript {
    ext {
        queryDslVersion = "5.0.0" // 변수 선언, queryDslVersion = '5.0.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3' // Spring Boot 버전 3.3.3 사용
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Java 17 사용
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()  // Maven Central 리포지토리 추가
    maven { url 'https://jitpack.io' }  // JitPack 리포지토리 추가
}

dependencies {
    // 1 공통레이아웃
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    // 2 몽고 디비
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // 3 스프링 시큐리티
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.3'

    // 4 JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // 또는 jjwt-gson을 사용 가능

    // 5 롬복
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // 6 Gson
    implementation 'com.google.code.gson:gson:2.8.9'

    // 7 Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // 8 ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'

    // 9 WebClient 장고 레스트 확인용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 10 장고 레스트 확인용 - OkHttp dependency
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // 11 결제 모듈
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'


    // 12 Log4j2 추가
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
    // 방법1
    //    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '5.0.0'

    // QueryDSL 도구 설치
    // 방법2
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    // 서버에서 유효성 체크 도구
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.0'

    // 썸네일 도구
    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'

    // 시큐리티 도구
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.0'

    // 타임리프 화면에서 인증된 유저에 따른 화면 조건식
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity6
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.2.RELEASE'

    // 소셜 로그인 쉽게 도와주는 도구 - 카카오, 네이버, 구글
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '3.3.0'

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
}

tasks.named('test') {
    useJUnitPlatform()
}

// 프로젝트 빌드 폴더에 소스 파일 등을 자동으로 변경하는 코드
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

compileJava.dependsOn('clean')
